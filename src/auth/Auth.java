/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package auth;

import auth.users.Roles;
import auth.users.User;
import auth.users.Users;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

/**
 *
 * @author oleksii
 */
public class Auth extends javax.swing.JFrame {
	
	boolean specialSymbols = false;
	boolean longPassword = false;

	/**
	 * Creates new form MainFrame
	 */
	public Auth() {
		initComponents();
		remove(mainPanel);
		remove(loginPanel);
		add(loginPanel);
		pack();
		getProperties();
		
	}
	
	private void getProperties(){
		try {
			List<String> lines = Files.readAllLines(Paths.get("properties.txt"), StandardCharsets.UTF_8);
			for (String line : lines) {
				if (line.matches("specialSymbols:(true|false)")){
					specialSymbols = new Boolean(line.replaceAll("specialSymbols:", "").trim());
				}else if (line.matches("longPassword:(true|false)")){
					longPassword = new Boolean(line.replaceAll("longPassword:", "").trim());
				}
			}
		} catch (IOException ex) {
			ex.printStackTrace();
		}
		rule1CB1.setSelected(specialSymbols);
		rule2CB1.setSelected(longPassword);
	}
	
	private void setProperties(){
		BufferedWriter writer = null;
		try {
			String str = "specialSymbols:" + specialSymbols + "\nlongPassword:" + longPassword;
			writer = new BufferedWriter(new FileWriter("properties.txt"));
			writer.write(str);
			
		} catch (IOException ex) {
			ex.printStackTrace();
		} finally {
			try {
				writer.close();
			} catch (IOException ex) {
				ex.printStackTrace();
			}
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        infoLabelMain = new javax.swing.JLabel();
        rule1CB1 = new javax.swing.JCheckBox();
        rule2CB1 = new javax.swing.JCheckBox();
        loginPanel = new javax.swing.JPanel();
        loginLabel = new javax.swing.JLabel();
        loginFiald = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        infoLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        mainPanel.setLayout(new java.awt.GridBagLayout());

        infoLabelMain.setText("Вітаю, ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(100, 100, 100, 100);
        mainPanel.add(infoLabelMain, gridBagConstraints);

        rule1CB1.setText("Паролі зі спеціальними символами");
        rule1CB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rule1CB1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        mainPanel.add(rule1CB1, gridBagConstraints);

        rule2CB1.setText("Паролі довші ніж 8 симолів");
        rule2CB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rule2CB1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        mainPanel.add(rule2CB1, gridBagConstraints);

        getContentPane().add(mainPanel);

        loginPanel.setLayout(new java.awt.GridBagLayout());

        loginLabel.setText("Логін");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 4, 2);
        loginPanel.add(loginLabel, gridBagConstraints);

        loginFiald.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 4, 2);
        loginPanel.add(loginFiald, gridBagConstraints);

        passwordLabel.setText("Пароль");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 4, 2);
        loginPanel.add(passwordLabel, gridBagConstraints);

        passwordField.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 4, 2);
        loginPanel.add(passwordField, gridBagConstraints);

        loginButton.setText("Вхід");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 2);
        loginPanel.add(loginButton, gridBagConstraints);

        infoLabel.setText("Введіть данні користувача");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        loginPanel.add(infoLabel, gridBagConstraints);

        exitButton.setText("Закінчити роботу");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(20, 2, 0, 0);
        loginPanel.add(exitButton, gridBagConstraints);

        getContentPane().add(loginPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
		User user = Users.getUserWithLoginAndPassword(loginFiald.getText(), passwordField.getText(), specialSymbols, longPassword);
		if (user != null) {
			remove(loginPanel);
			remove(mainPanel);
			add(mainPanel);
			infoLabelMain.setText(infoLabelMain.getText() + user.getLogin());
			rule1CB1.setVisible(user.getRole().equals(Roles.ADMIN));
			rule2CB1.setVisible(user.getRole().equals(Roles.ADMIN));
		} else {
			remove(mainPanel);
			remove(loginPanel);
			add(loginPanel);
			mainPanel.setVisible(false);
			infoLabel.setText("Невірний логін або пароль");
		}
		pack();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
		dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void rule1CB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rule1CB1ActionPerformed
        specialSymbols = rule1CB1.isSelected();
		setProperties();
    }//GEN-LAST:event_rule1CB1ActionPerformed

    private void rule2CB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rule2CB1ActionPerformed
        longPassword = rule2CB1.isSelected();
		setProperties();
    }//GEN-LAST:event_rule2CB1ActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Auth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Auth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Auth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Auth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Auth().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel infoLabelMain;
    private javax.swing.JButton loginButton;
    private javax.swing.JTextField loginFiald;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JCheckBox rule1CB1;
    private javax.swing.JCheckBox rule2CB1;
    // End of variables declaration//GEN-END:variables
}
